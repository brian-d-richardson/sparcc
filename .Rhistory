values_to = "estimate") %>%
mutate(method = factor(substr(method.param, 2, 3),
levels = c("or", "cc", "ml", "sp"),
labels = c("Oracle",
"Complete Case",
"Parametric MLE",
"Semiparametric")),
param = factor(substr(method.param, 4, 4)),
B.true = B[param])
# check for simulations with errors
sim.out.long %>%
filter(param == 1) %>%
group_by(q, method) %>%
summarize(prop.error = mean(is.na(estimate))) %>%
filter(prop.error > 0) %>%
kable(digits = 3) %>%
kable_styling("striped")
# extract simulation parameters
q <- unique(sim.out$q)
n.rep <- nrow(sim.out) /
n_distinct(dplyr::select(sim.out, q))
# make labels for plots
param.labs <- c("\u03B20", "\u03B21", "\u03B22", "log\u03C3\u00B2")
names(param.labs) <- 1:4
# colorblind friendly pallette
#pal_light <- cbbPalette <- c('#BBBBBB', '#228833', '#4477AA', '#AA3377')
#pal_dark <- cbbPalette <- c('#5d5d5d', '#114419', '#223b55', '#55193b')
pal_light <- c('#EE6677', '#228833', '#4477AA', '#CCBB44', '#66CCEE', '#AA3377', '#BBBBBB')
pal_dark <- c('#991122', '#114419', '#223b55', '#6b611d', '#117799', '#55193b', '#5d5d5d')
# obtain empirical variances by method, parameter, and q
sim.out.sum <- sim.out.long %>%
group_by(q, method, param) %>%
summarise(var = var(estimate))
# plot variance over q
ggplot(sim.out.sum,
aes(x = q,
y = var,
color = method,
shape = method)) +
geom_point() +
geom_line() +
facet_wrap(~ param,
scales = "free",
labeller = labeller(param = param.labs)) +
theme_bw() +
theme(legend.position = "bottom") +
scale_color_manual(values = pal_light[c(1, 2, 3, 5)]) +
labs(x = "Censoring Proportion (q)",
y = "Empircal Variance of Parameter Estimates",
color = "Method",
shape = "Method") +
ggtitle("Variance of Parameter Estimators by Censoring Proportion",
subtitle = paste0(n.rep, " Simulations per Setting"))
rm(list = ls())
library(dplyr)
library(tidyverse)
library(ggplot2)
library(ggh4x)
library(scales)
library(ggthemes)
library(kableExtra)
# true beta
B <- c(1, 10, 2, log(1))
# load simulation results from each of 10 clusters
sim.out.list <- lapply(
X = c(0:9),
FUN = function(clust) {
cbind(clust,
read.csv(paste0(
"sim3_data/v2/sd",
clust, ".csv")))
})
# combine simulation results into 1 data frame
sim.out <- bind_rows(sim.out.list)
colnames(sim.out) <- gsub(".B", "", colnames(sim.out))
colnames(sim.out) <- gsub("B2", "trueB2", colnames(sim.out))
# make long data frame
sim.out.long <- sim.out %>%
pivot_longer(cols = starts_with("B"),
names_to = "method.param",
values_to = "estimate") %>%
mutate(method = factor(substr(method.param, 2, 3),
levels = c("or", "cc", "ml", "sp"),
labels = c("Oracle",
"Complete Case",
"Parametric MLE",
"Semiparametric")),
param = factor(substr(method.param, 4, 4)),
B.true = B[param])
# check for simulations with errors
sim.out.long %>%
filter(param == 1) %>%
group_by(q, method) %>%
summarize(prop.error = mean(is.na(estimate))) %>%
filter(prop.error > 0) %>%
kable(digits = 3) %>%
kable_styling("striped")
# extract simulation parameters
q <- unique(sim.out$q)
n.rep <- nrow(sim.out) /
n_distinct(dplyr::select(sim.out, q))
# make labels for plots
param.labs <- c("\u03B20", "\u03B21", "\u03B22", "log\u03C3\u00B2")
names(param.labs) <- 1:4
# colorblind friendly pallette
#pal_light <- cbbPalette <- c('#BBBBBB', '#228833', '#4477AA', '#AA3377')
#pal_dark <- cbbPalette <- c('#5d5d5d', '#114419', '#223b55', '#55193b')
pal_light <- c('#EE6677', '#228833', '#4477AA', '#CCBB44', '#66CCEE', '#AA3377', '#BBBBBB')
pal_dark <- c('#991122', '#114419', '#223b55', '#6b611d', '#117799', '#55193b', '#5d5d5d')
# obtain empirical variances by method, parameter, and q
sim.out.sum <- sim.out.long %>%
group_by(q, method, param) %>%
summarise(var = var(estimate))
# plot variance over q
ggplot(sim.out.sum,
aes(x = q,
y = var,
color = method,
shape = method)) +
geom_point() +
geom_line() +
facet_wrap(~ param,
scales = "free",
labeller = labeller(param = param.labs)) +
theme_bw() +
theme(legend.position = "bottom") +
scale_color_manual(values = pal_light[c(1, 2, 3, 5)]) +
labs(x = "Censoring Proportion (q)",
y = "Empircal Variance of Parameter Estimates",
color = "Method",
shape = "Method") +
ggtitle("Variance of Parameter Estimators by Censoring Proportion",
subtitle = paste0(n.rep, " Simulations per Setting"))
# plot variance over q for beta_1 only
ggplot(filter(sim.out.sum, param == 2),
aes(x = q,
y = var,
color = method,
shape = method)) +
geom_point() +
geom_line() +
labs(x = "Censoring Proportion (q)",
y = "Variance",
color = "Method",
shape = "Method") +
theme_bw() +
theme(legend.position = "bottom") +
scale_color_manual(values = pal_light[c(1, 2, 3, 5)]) #+
#ggtitle("Variance of \u03B21 Estimator by Censoring Proportion",
#subtitle = paste0(n.rep, " Simulations per Setting"))
ggsave("sim_plots/sim1_2_variances.png",
dpi = 300,
width = 6,
height = 4)
View(sim.out.long)
# obtain empirical variances by method, parameter, and q
sim.out.sum <- sim.out.long %>%
group_by(q, method, param) %>%
summarise(var = var(estimate),
bias = mean(estimate - B.true))
# obtain empirical variances by method, parameter, and q
sim.out.sum <- sim.out.long %>%
group_by(q, method, param) %>%
summarise(var = var(estimate),
Var = mean((estimate - B.true) ^ 2),
se.Var = sd((estimate - B.true) ^ 2),
Var.lower = Var - qnorm(0.975) * se.Var / n.rep,
Var.upper = Var + qnorm(0.975) * se.Var / n.rep)
View(sim.out.sum)
# plot variance over q
ggplot(sim.out.sum,
aes(x = q,
y = Var,
ymin = Var.lower,
ymax = Var.upper,
color = method,
shape = method)) +
geom_point() +
geom_line() +
facet_wrap(~ param,
scales = "free",
labeller = labeller(param = param.labs)) +
theme_bw() +
theme(legend.position = "bottom") +
scale_color_manual(values = pal_light[c(1, 2, 3, 5)]) +
labs(x = "Censoring Proportion (q)",
y = "Empircal Variance of Parameter Estimates",
color = "Method",
shape = "Method") +
ggtitle("Variance of Parameter Estimators by Censoring Proportion",
subtitle = paste0(n.rep, " Simulations per Setting"))
# plot variance over q
ggplot(sim.out.sum,
aes(x = q,
y = Var,
ymin = Var.lower,
ymax = Var.upper,
color = method,
shape = method)) +
geom_point() +
geom_errorbar() +
geom_line() +
facet_wrap(~ param,
scales = "free",
labeller = labeller(param = param.labs)) +
theme_bw() +
theme(legend.position = "bottom") +
scale_color_manual(values = pal_light[c(1, 2, 3, 5)]) +
labs(x = "Censoring Proportion (q)",
y = "Empircal Variance of Parameter Estimates",
color = "Method",
shape = "Method") +
ggtitle("Variance of Parameter Estimators by Censoring Proportion",
subtitle = paste0(n.rep, " Simulations per Setting"))
# plot variance over q
ggplot(sim.out.sum,
aes(x = q,
y = Var,
ymin = Var.lower,
ymax = Var.upper,
color = method,
shape = method)) +
geom_point() +
#geom_errorbar() +
geom_ribbon() +
geom_line() +
facet_wrap(~ param,
scales = "free",
labeller = labeller(param = param.labs)) +
theme_bw() +
theme(legend.position = "bottom") +
scale_color_manual(values = pal_light[c(1, 2, 3, 5)]) +
labs(x = "Censoring Proportion (q)",
y = "Empircal Variance of Parameter Estimates",
color = "Method",
shape = "Method") +
ggtitle("Variance of Parameter Estimators by Censoring Proportion",
subtitle = paste0(n.rep, " Simulations per Setting"))
# plot variance over q
ggplot(sim.out.sum,
aes(x = q,
y = Var,
ymin = Var.lower,
ymax = Var.upper,
fill = method,
color = method,
shape = method)) +
geom_point() +
#geom_errorbar() +
geom_ribbon() +
geom_line() +
facet_wrap(~ param,
scales = "free",
labeller = labeller(param = param.labs)) +
theme_bw() +
theme(legend.position = "bottom") +
scale_color_manual(values = pal_light[c(1, 2, 3, 5)]) +
labs(x = "Censoring Proportion (q)",
y = "Empircal Variance of Parameter Estimates",
color = "Method",
shape = "Method") +
ggtitle("Variance of Parameter Estimators by Censoring Proportion",
subtitle = paste0(n.rep, " Simulations per Setting"))
# plot variance over q
ggplot(sim.out.sum,
aes(x = q,
y = Var,
ymin = Var.lower,
ymax = Var.upper,
fill = method,
color = method,
shape = method)) +
geom_point() +
#geom_errorbar() +
geom_ribbon(alpha = 0.5) +
geom_line() +
facet_wrap(~ param,
scales = "free",
labeller = labeller(param = param.labs)) +
theme_bw() +
theme(legend.position = "bottom") +
scale_color_manual(values = pal_light[c(1, 2, 3, 5)]) +
labs(x = "Censoring Proportion (q)",
y = "Empircal Variance of Parameter Estimates",
color = "Method",
shape = "Method") +
ggtitle("Variance of Parameter Estimators by Censoring Proportion",
subtitle = paste0(n.rep, " Simulations per Setting"))
# plot variance over q
ggplot(sim.out.sum,
aes(x = q,
y = Var,
ymin = Var.lower,
ymax = Var.upper,
fill = method,
color = method,
shape = method)) +
geom_point() +
#geom_errorbar() +
geom_ribbon(alpha = 0.3) +
geom_line() +
facet_wrap(~ param,
scales = "free",
labeller = labeller(param = param.labs)) +
theme_bw() +
theme(legend.position = "bottom") +
scale_color_manual(values = pal_light[c(1, 2, 3, 5)]) +
labs(x = "Censoring Proportion (q)",
y = "Empircal Variance of Parameter Estimates",
color = "Method",
shape = "Method") +
ggtitle("Variance of Parameter Estimators by Censoring Proportion",
subtitle = paste0(n.rep, " Simulations per Setting"))
rm(list = ls())
library(dplyr)
library(tidyverse)
library(ggplot2)
library(ggh4x)
library(scales)
library(ggthemes)
library(kableExtra)
# true beta
B <- c(1, 10, 2, log(1))
# load simulation results from each of 10 clusters
sim.out.list <- lapply(
X = c(0:9),
FUN = function(clust) {
cbind(clust,
read.csv(paste0(
"sim3_data/v1/sd",
clust, ".csv")))
})
# combine simulation results into 1 data frame
sim.out <- bind_rows(sim.out.list)
colnames(sim.out) <- gsub(".B", "", colnames(sim.out))
colnames(sim.out) <- gsub("B2", "trueB2", colnames(sim.out))
# make long data frame
sim.out.long <- sim.out %>%
pivot_longer(cols = starts_with("B"),
names_to = "method.param",
values_to = "estimate") %>%
mutate(method = factor(substr(method.param, 2, 3),
levels = c("or", "cc", "ml", "sp"),
labels = c("Oracle",
"Complete Case",
"Parametric MLE",
"Semiparametric")),
param = factor(substr(method.param, 4, 4)),
B.true = B[param])
# check for simulations with errors
sim.out.long %>%
filter(param == 1) %>%
group_by(q, method) %>%
summarize(prop.error = mean(is.na(estimate))) %>%
filter(prop.error > 0) %>%
kable(digits = 3) %>%
kable_styling("striped")
# extract simulation parameters
q <- unique(sim.out$q)
n.rep <- nrow(sim.out) /
n_distinct(dplyr::select(sim.out, q))
# make labels for plots
param.labs <- c("\u03B20", "\u03B21", "\u03B22", "log\u03C3\u00B2")
names(param.labs) <- 1:4
# colorblind friendly pallette
#pal_light <- cbbPalette <- c('#BBBBBB', '#228833', '#4477AA', '#AA3377')
#pal_dark <- cbbPalette <- c('#5d5d5d', '#114419', '#223b55', '#55193b')
pal_light <- c('#EE6677', '#228833', '#4477AA', '#CCBB44', '#66CCEE', '#AA3377', '#BBBBBB')
pal_dark <- c('#991122', '#114419', '#223b55', '#6b611d', '#117799', '#55193b', '#5d5d5d')
# obtain empirical variances by method, parameter, and q
sim.out.sum <- sim.out.long %>%
group_by(q, method, param) %>%
summarise(var = var(estimate),
Var = mean((estimate - B.true) ^ 2),
se.Var = sd((estimate - B.true) ^ 2),
Var.lower = Var - qnorm(0.975) * se.Var / n.rep,
Var.upper = Var + qnorm(0.975) * se.Var / n.rep)
# plot variance over q
ggplot(sim.out.sum,
aes(x = q,
y = Var,
ymin = Var.lower,
ymax = Var.upper,
fill = method,
color = method,
shape = method)) +
geom_point() +
#geom_errorbar() +
geom_ribbon(alpha = 0.3) +
geom_line() +
facet_wrap(~ param,
scales = "free",
labeller = labeller(param = param.labs)) +
theme_bw() +
theme(legend.position = "bottom") +
scale_color_manual(values = pal_light[c(1, 2, 3, 5)]) +
labs(x = "Censoring Proportion (q)",
y = "Empircal Variance of Parameter Estimates",
color = "Method",
shape = "Method") +
ggtitle("Variance of Parameter Estimators by Censoring Proportion",
subtitle = paste0(n.rep, " Simulations per Setting"))
# plot variance over q for beta_1 only
ggplot(filter(sim.out.sum, param == 2),
aes(x = q,
y = var,
ymin = Var.lower,
ymax = Var.upper,
fill = method,
color = method,
shape = method)) +
geom_point() +
geom_line() +
geom_ribbon(alpha = 0.3) +
labs(x = "Censoring Proportion (q)",
y = "Variance",
color = "Method",
shape = "Method") +
theme_bw() +
theme(legend.position = "bottom") +
scale_color_manual(values = pal_light[c(1, 2, 3, 5)]) #+
# obtain empirical variances by method, parameter, and q
sim.out.sum <- sim.out.long %>%
group_by(q, method, param) %>%
summarise(var = var(estimate),
Var = mean((estimate - B.true) ^ 2) / sqrt(n.rep),
se.Var = sd((estimate - B.true) ^ 2) / sqrt(n.rep),
Var.lower = Var - qnorm(0.975) * se.Var ,
Var.upper = Var + qnorm(0.975) * se.Var)
# plot variance over q
ggplot(sim.out.sum,
aes(x = q,
y = Var,
ymin = Var.lower,
ymax = Var.upper,
fill = method,
color = method,
shape = method)) +
geom_point() +
#geom_errorbar() +
geom_ribbon(alpha = 0.3) +
geom_line() +
facet_wrap(~ param,
scales = "free",
labeller = labeller(param = param.labs)) +
theme_bw() +
theme(legend.position = "bottom") +
scale_color_manual(values = pal_light[c(1, 2, 3, 5)]) +
labs(x = "Censoring Proportion (q)",
y = "Empircal Variance of Parameter Estimates",
color = "Method",
shape = "Method") +
ggtitle("Variance of Parameter Estimators by Censoring Proportion",
subtitle = paste0(n.rep, " Simulations per Setting"))
# obtain empirical variances by method, parameter, and q
sim.out.sum <- sim.out.long %>%
group_by(q, method, param) %>%
summarise(var = var(estimate),
Var = mean((estimate - B.true) ^ 2),
se.Var = sd((estimate - B.true) ^ 2) / sqrt(n.rep),
Var.lower = Var - qnorm(0.975) * se.Var ,
Var.upper = Var + qnorm(0.975) * se.Var)
# plot variance over q
ggplot(sim.out.sum,
aes(x = q,
y = Var,
ymin = Var.lower,
ymax = Var.upper,
fill = method,
color = method,
shape = method)) +
geom_point() +
#geom_errorbar() +
geom_ribbon(alpha = 0.3) +
geom_line() +
facet_wrap(~ param,
scales = "free",
labeller = labeller(param = param.labs)) +
theme_bw() +
theme(legend.position = "bottom") +
scale_color_manual(values = pal_light[c(1, 2, 3, 5)]) +
labs(x = "Censoring Proportion (q)",
y = "Empircal Variance of Parameter Estimates",
color = "Method",
shape = "Method") +
ggtitle("Variance of Parameter Estimators by Censoring Proportion",
subtitle = paste0(n.rep, " Simulations per Setting"))
# plot variance over q for beta_1 only
ggplot(filter(sim.out.sum, param == 2),
aes(x = q,
y = var,
ymin = Var.lower,
ymax = Var.upper,
fill = method,
color = method,
shape = method)) +
geom_point() +
geom_line() +
geom_ribbon(alpha = 0.3) +
labs(x = "Censoring Proportion (q)",
y = "Variance",
color = "Method",
shape = "Method") +
theme_bw() +
theme(legend.position = "bottom") +
scale_color_manual(values = pal_light[c(1, 2, 3, 5)]) #+
#ggtitle("Variance of \u03B21 Estimator by Censoring Proportion",
#subtitle = paste0(n.rep, " Simulations per Setting"))
ggsave("sim_plots/sim1_2_variances.png",
dpi = 300,
width = 6,
height = 4)
