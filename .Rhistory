c.rate <- get.c.rate(
q = q,
x.rate = x.rate,
x.shape = x.shape,
c.shape = c.shape)
# generate data
dat <- gen.data(n = n, q = q, B = B, s2 = s2,
x.rate = x.rate, x.shape = x.shape,
c.rate = c.rate, c.shape = c.shape)$dat
# estimate nuisance density parameters
x.rate.hat <- mean(dat$Delta) / mean(dat$W)
c.rate.hat <- mean(1 - dat$Delta) / mean(dat$W)
return(c(x.rate.hat, c.rate.hat))
})
return(list("x.rate" = x.rate,
"c.rate" = c.rate,
"x.rate.hat" <- rate.hat[1,],
"c.rate.hat" <- rate.hat[2,]))
}
assess.eta.est(n.rep = n.rep, n = n, q = q, B = B, s2 = s2, x.mean = x.mean,
x.shape = 1, c.shape = 1)
rate.hat <- vapply(
X = 1:n.rep,
FUN.VAL = numeric(2),
FUN = function(x) {
# rate parameters for X and C
x.rate <- x.shape / x.mean
c.rate <- get.c.rate(
q = q,
x.rate = x.rate,
x.shape = x.shape,
c.shape = c.shape)
# generate data
dat <- gen.data(n = n, q = q, B = B, s2 = s2,
x.rate = x.rate, x.shape = x.shape,
c.rate = c.rate, c.shape = c.shape)$dat
# estimate nuisance density parameters
x.rate.hat <- mean(dat$Delta) / mean(dat$W)
c.rate.hat <- mean(1 - dat$Delta) / mean(dat$W)
return(c(x.rate.hat, c.rate.hat))
})
View(rate.hat)
rep("x", "c", each = n.rep)
rep(c("x", "c"), each = n.rep)
rep(c(x.rate, c.rate), each = n.rep)
plot.dat <- data.frame(
var = rep(c("x", "c"), each = n.rep)
rate = rep(c(x.rate, c.rate), each = n.rep),
plot.dat <- data.frame(
var = rep(c("x", "c"), each = n.rep),
rate = rep(c(x.rate, c.rate), each = n.rep),
rate.hat = c(rate.hat[1,], rate.hat[2,])
)
View(plot.dat)
ggplot(data = plot.dat,
aes(y = rate.hat)) +
geom_boxplot() +
geom_hline(yintercept = rate) +
facet_grid(~var)
ggplot(data = plot.dat,
aes(y = rate.hat)) +
geom_boxplot() +
geom_hline(aes(yintercept = rate)) +
facet_grid(~var)
ggplot(data = plot.dat,
aes(y = rate.hat)) +
geom_boxplot() +
geom_hline(aes(yintercept = rate)) +
facet_grid(~var, scales = "free")
ggplot(data = plot.dat,
aes(y = rate.hat)) +
geom_boxplot() +
geom_hline(aes(yintercept = rate)) +
facet_grid(~var, scales = "free_y")
ggplot(data = plot.dat,
aes(y = rate.hat)) +
geom_boxplot() +
geom_hline(aes(yintercept = rate)) +
facet_wrap(~var, scales = "free_y")
ggplot(data = plot.dat,
aes(y = rate.hat)) +
geom_boxplot() +
geom_hline(aes(yintercept = rate),
linetype = "dashed",
color = "yellow") +
facet_wrap(~var, scales = "free_y")
ggplot(data = plot.dat,
aes(y = rate.hat)) +
geom_boxplot() +
geom_hline(aes(yintercept = rate),
linetype = "dashed",
color = "orange") +
facet_wrap(~var, scales = "free_y")
ggplot(data = plot.dat,
aes(y = rate.hat,
fill = var)) +
geom_boxplot() +
geom_hline(aes(yintercept = rate),
linetype = "dashed",
color = "orange") +
scale_fill_manual(values = c("red", "blue"))
ggplot(data = plot.dat,
aes(y = rate.hat,
fill = var)) +
geom_boxplot() +
geom_hline(aes(yintercept = rate),
linetype = "dashed",
color = "orange") +
scale_fill_manual(values = c("red", "blue")) +
facet_wrap(~var, scales = "free_y")
plot.dat <- data.frame(
var = rep(c("C", "C"), each = n.rep),
rate = rep(c(x.rate, c.rate), each = n.rep),
rate.hat = c(rate.hat[1,], rate.hat[2,])
)
ggplot(data = plot.dat,
aes(y = rate.hat,
fill = var)) +
geom_boxplot() +
geom_hline(aes(yintercept = rate),
linetype = "dashed",
color = "orange") +
scale_fill_manual(values = c("red", "blue")) +
facet_wrap(~var, scales = "free_y")
plot.dat <- data.frame(
var = rep(c("X", "C"), each = n.rep),
rate = rep(c(x.rate, c.rate), each = n.rep),
rate.hat = c(rate.hat[1,], rate.hat[2,])
)
ggplot(data = plot.dat,
aes(y = rate.hat,
fill = var)) +
geom_boxplot() +
geom_hline(aes(yintercept = rate),
linetype = "dashed",
color = "orange") +
scale_fill_manual(values = c("red", "blue")) +
facet_wrap(~var, scales = "free_y")
ggplot(data = plot.dat,
aes(y = rate.hat,
fill = var)) +
geom_boxplot() +
geom_hline(aes(yintercept = rate),
linetype = "dashed",
color = "orange") +
scale_fill_manual(values = c("red", "blue")) +
facet_wrap(~var, scales = "free_y") +
labs(y = "Estimated Rate") +
theme(axis.ticks.x = element_blank())
ggplot(data = plot.dat,
aes(y = rate.hat,
fill = var)) +
geom_boxplot() +
geom_hline(aes(yintercept = rate),
linetype = "dashed",
color = "orange") +
scale_fill_manual(values = c("red", "blue")) +
facet_wrap(~var, scales = "free_y") +
labs(y = "Estimated Rate") +
theme(axis.ticks.x = element_blank(),
axis.text.x = element_blank())
ggplot(data = plot.dat,
aes(y = rate.hat,
fill = var)) +
geom_boxplot() +
geom_hline(aes(yintercept = rate),
linetype = "dashed",
color = "orange") +
scale_fill_manual(values = c("red", "blue")) +
facet_wrap(~var, scales = "free_y") +
labs(y = "Estimated Rate") +
theme(axis.ticks.x = element_blank(),
axis.text.x = element_blank(), legend.position = "none")
#'
#' @inheritParams gen.data
#' @inheritParams get.q
#'
#' @param x.mean a positive number, the mean of X
#' @param n.rep a positive integer, the number of simulated replicates
#'
#' @return empirical distribution of estimated parameters for eta1 and eta2
#'
#' @export
assess.eta.est <- function(n.rep, n, q, B, s2, x.mean, x.shape, c.shape) {
rate.hat <- vapply(
X = 1:n.rep,
FUN.VAL = numeric(2),
FUN = function(x) {
# rate parameters for X and C
x.rate <- x.shape / x.mean
c.rate <- get.c.rate(
q = q,
x.rate = x.rate,
x.shape = x.shape,
c.shape = c.shape)
# generate data
dat <- gen.data(n = n, q = q, B = B, s2 = s2,
x.rate = x.rate, x.shape = x.shape,
c.rate = c.rate, c.shape = c.shape)$dat
# estimate nuisance density parameters
x.rate.hat <- mean(dat$Delta) / mean(dat$W)
c.rate.hat <- mean(1 - dat$Delta) / mean(dat$W)
return(c(x.rate.hat, c.rate.hat))
})
plot.dat <- data.frame(
var = rep(c("X", "C"), each = n.rep),
rate = rep(c(x.rate, c.rate), each = n.rep),
rate.hat = c(rate.hat[1,], rate.hat[2,])
)
plot <- ggplot(
data = plot.dat,
aes(y = rate.hat,
fill = var)) +
geom_boxplot() +
geom_hline(aes(yintercept = rate),
linetype = "dashed",
color = "orange") +
scale_fill_manual(values = c("red", "blue")) +
facet_wrap(~var, scales = "free_y") +
labs(y = "Estimated Rate") +
theme(axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
legend.position = "none")
return(plot)
}
n.rep <- 10
assess.eta.est(n.rep = n.rep, n = n, q = q, B = B, s2 = s2, x.mean = x.mean,
x.shape = 1, c.shape = 1)
n.rep <- 100
assess.eta.est(n.rep = n.rep, n = n, q = q, B = B, s2 = s2, x.mean = x.mean,
x.shape = 1, c.shape = 1)
#'
#' @inheritParams gen.data
#' @inheritParams get.q
#'
#' @param x.mean a positive number, the mean of X
#' @param n.rep a positive integer, the number of simulated replicates
#'
#' @return empirical distribution of estimated parameters for eta1 and eta2
#'
#' @export
assess.eta.est <- function(n.rep, n, q, B, s2, x.mean, x.shape, c.shape) {
rate.hat <- vapply(
X = 1:n.rep,
FUN.VAL = numeric(2),
FUN = function(x) {
# rate parameters for X and C
x.rate <- x.shape / x.mean
c.rate <- get.c.rate(
q = q,
x.rate = x.rate,
x.shape = x.shape,
c.shape = c.shape)
# generate data
dat <- gen.data(n = n, q = q, B = B, s2 = s2,
x.rate = x.rate, x.shape = x.shape,
c.rate = c.rate, c.shape = c.shape)$dat
# estimate nuisance density parameters
x.rate.hat <- mean(dat$Delta) / mean(dat$W)
c.rate.hat <- mean(1 - dat$Delta) / mean(dat$W)
return(c(x.rate.hat, c.rate.hat))
})
plot.dat <- data.frame(
var = rep(c("X", "C"), each = n.rep),
rate = rep(c(x.rate, c.rate), each = n.rep),
rate.hat = c(rate.hat[1,], rate.hat[2,])
)
plot <- ggplot(
data = plot.dat,
aes(y = rate.hat,
fill = var)) +
geom_boxplot() +
geom_hline(aes(yintercept = rate),
linetype = "dashed",
color = "orange") +
scale_fill_manual(values = c("red", "blue")) +
facet_wrap(~var, scales = "free_y") +
labs(y = "Estimated Rate") +
ggtitle("Empirical Distribution of Estimated Nuisance Parameters",
subtitle = paste0("q = ", q, "; ",
"n = ", n, "; ",
"n.rep = ", n.rep, "\n",
"x.shape = ", x.shape, "; ",
"c.shape = ", c.shape))
theme(axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
legend.position = "none")
return(plot)
}
n.rep <- 100
assess.eta.est(n.rep = n.rep, n = n, q = q, B = B, s2 = s2, x.mean = x.mean,
x.shape = 1, c.shape = 1)
#'
#' @inheritParams gen.data
#' @inheritParams get.q
#'
#' @param x.mean a positive number, the mean of X
#' @param n.rep a positive integer, the number of simulated replicates
#'
#' @return empirical distribution of estimated parameters for eta1 and eta2
#'
#' @export
assess.eta.est <- function(n.rep, n, q, B, s2, x.mean, x.shape, c.shape) {
rate.hat <- vapply(
X = 1:n.rep,
FUN.VAL = numeric(2),
FUN = function(x) {
# rate parameters for X and C
x.rate <- x.shape / x.mean
c.rate <- get.c.rate(
q = q,
x.rate = x.rate,
x.shape = x.shape,
c.shape = c.shape)
# generate data
dat <- gen.data(n = n, q = q, B = B, s2 = s2,
x.rate = x.rate, x.shape = x.shape,
c.rate = c.rate, c.shape = c.shape)$dat
# estimate nuisance density parameters
x.rate.hat <- mean(dat$Delta) / mean(dat$W)
c.rate.hat <- mean(1 - dat$Delta) / mean(dat$W)
return(c(x.rate.hat, c.rate.hat))
})
plot.dat <- data.frame(
var = rep(c("X", "C"), each = n.rep),
rate = rep(c(x.rate, c.rate), each = n.rep),
rate.hat = c(rate.hat[1,], rate.hat[2,])
)
plot <- ggplot(
data = plot.dat,
aes(y = rate.hat,
fill = var)) +
geom_boxplot() +
geom_hline(aes(yintercept = rate),
linetype = "dashed",
color = "orange") +
scale_fill_manual(values = c("red", "blue")) +
facet_wrap(~var, scales = "free_y") +
labs(y = "Estimated Rate") +
ggtitle("Empirical Distribution of Estimated Nuisance Parameters",
subtitle = paste0("q = ", q, "; ",
"n = ", n, "; ",
"n.rep = ", n.rep, "\n",
"x.shape = ", x.shape, "; ",
"c.shape = ", c.shape)) +
theme(axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
legend.position = "none")
return(plot)
}
n.rep <- 100
assess.eta.est(n.rep = n.rep, n = n, q = q, B = B, s2 = s2, x.mean = x.mean,
x.shape = 1, c.shape = 1)
assess.eta.est(n.rep = n.rep, n = n, q = q, B = B, s2 = s2, x.mean = x.mean,
x.shape = 4, c.shape = 1)
assess.eta.est(n.rep = n.rep, n = n, q = q, B = B, s2 = s2, x.mean = x.mean,
x.shape = 1, c.shape = 4)
assess.eta.est(n.rep = n.rep, n = n, q = q, B = B, s2 = s2, x.mean = x.mean,
x.shape = 4, c.shape = 1)
assess.eta.est(n.rep = n.rep, n = n, q = q, B = B, s2 = s2, x.mean = x.mean,
x.shape = 4, c.shape = 4)
assess.eta.est(n.rep = n.rep, n = n, q = q, B = B, s2 = s2, x.mean = x.mean,
x.shape = 1, c.shape = 4)
assess.eta.est(n.rep = n.rep, n = n, q = q, B = B, s2 = s2, x.mean = x.mean,
x.shape = 1, c.shape = 1)
x.shape = 4
c.shape = 1
# rate parameters for X and C
x.rate <- x.shape / x.mean
c.rate <- get.c.rate(
q = q,
x.rate = x.rate,
x.shape = x.shape,
c.shape = c.shape)
x.rate
c.rate
# generate data
dat <- gen.data(n = n, q = q, B = B, s2 = s2,
x.rate = x.rate, x.shape = x.shape,
c.rate = c.rate, c.shape = c.shape)$dat
assess.eta.est(n.rep = n.rep, n = n, q = q, B = B, s2 = s2, x.mean = x.mean,
x.shape = 4, c.shape = 1)
rm(list = ls())
#setwd(dirname(getwd()))
library(ggplot2)
library(devtools)
load_all()
n <- 10000            # sample size
q <- 0.8              # censoring proportion
B <- c(1, 2)          # beta
s2 <- 1.1             # variance of Y|X,Z
x.mean <- 0.25        # mean of X
n.rep <- 100
assess.eta.est(n.rep = n.rep, n = n, q = q, B = B, s2 = s2, x.mean = x.mean,
x.shape = 1, c.shape = 1)
#'
#' @inheritParams gen.data
#' @inheritParams get.q
#'
#' @param x.mean a positive number, the mean of X
#' @param n.rep a positive integer, the number of simulated replicates
#'
#' @return empirical distribution of estimated parameters for eta1 and eta2
#'
#' @export
assess.eta.est <- function(n.rep, n, q, B, s2, x.mean, x.shape, c.shape) {
# rate parameters for X and C
x.rate <- x.shape / x.mean
c.rate <- get.c.rate(
q = q,
x.rate = x.rate,
x.shape = x.shape,
c.shape = c.shape)
rate.hat <- vapply(
X = 1:n.rep,
FUN.VAL = numeric(2),
FUN = function(x) {
# generate data
dat <- gen.data(n = n, q = q, B = B, s2 = s2,
x.rate = x.rate, x.shape = x.shape,
c.rate = c.rate, c.shape = c.shape)$dat
# estimate nuisance density parameters
x.rate.hat <- mean(dat$Delta) / mean(dat$W)
c.rate.hat <- mean(1 - dat$Delta) / mean(dat$W)
return(c(x.rate.hat, c.rate.hat))
})
plot.dat <- data.frame(
var = rep(c("X", "C"), each = n.rep),
rate = rep(c(x.rate, c.rate), each = n.rep),
rate.hat = c(rate.hat[1,], rate.hat[2,])
)
plot <- ggplot(
data = plot.dat,
aes(y = rate.hat,
fill = var)) +
geom_boxplot() +
geom_hline(aes(yintercept = rate),
linetype = "dashed",
color = "orange") +
scale_fill_manual(values = c("red", "blue")) +
facet_wrap(~var, scales = "free_y") +
labs(y = "Estimated Rate") +
ggtitle("Empirical Distribution of Estimated Nuisance Parameters",
subtitle = paste0("q = ", q, "; ",
"n = ", n, "; ",
"n.rep = ", n.rep, "\n",
"x.shape = ", x.shape, "; ",
"c.shape = ", c.shape)) +
theme(axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
legend.position = "none")
return(plot)
}
n.rep <- 100
assess.eta.est(n.rep = n.rep, n = n, q = q, B = B, s2 = s2, x.mean = x.mean,
x.shape = 1, c.shape = 1)
assess.eta.est(n.rep = n.rep, n = n, q = q, B = B, s2 = s2, x.mean = x.mean,
x.shape = 4, c.shape = 1)
assess.eta.est(n.rep = n.rep, n = n, q = q, B = B, s2 = s2, x.mean = x.mean,
x.shape = 1, c.shape = 4)
assess.eta.est(n.rep = n.rep, n = n, q = q, B = B, s2 = s2, x.mean = x.mean,
x.shape = 4, c.shape = 4)
assess.eta.est(n.rep = n.rep, n = n, q = q, B = B, s2 = s2, x.mean = x.mean,
x.shape = 1, c.shape = 1)
assess.eta.est(n.rep = n.rep, n = n, q = q, B = B, s2 = s2, x.mean = x.mean,
x.shape = 2, c.shape = 1)
assess.eta.est(n.rep = n.rep, n = n, q = q, B = B, s2 = s2, x.mean = x.mean,
x.shape = 1, c.shape = 2)
assess.eta.est(n.rep = n.rep, n = n, q = q, B = B, s2 = s2, x.mean = x.mean,
x.shape = 2, c.shape = 2)
n.rep <- 1000
assess.eta.est(n.rep = n.rep, n = n, q = q, B = B, s2 = s2, x.mean = x.mean,
x.shape = 1, c.shape = 1)
assess.eta.est(n.rep = n.rep, n = n, q = q, B = B, s2 = s2, x.mean = x.mean,
x.shape = 2, c.shape = 1)
assess.eta.est(n.rep = n.rep, n = n, q = q, B = B, s2 = s2, x.mean = x.mean,
x.shape = 1, c.shape = 2)
assess.eta.est(n.rep = n.rep, n = n, q = q, B = B, s2 = s2, x.mean = x.mean,
x.shape = 2, c.shape = 2)
n <- 10000            # sample size
q <- 0.8              # censoring proportion
B <- c(1, 2)          # beta
s2 <- 1.1             # variance of Y|X,Z
x.mean <- 1           # mean of X
assess.dat(n = n, q = q, B = B, s2 = s2, x.mean = x.mean,
x.shape = 1, c.shape = 1)
assess.dat(n = n, q = q, B = B, s2 = s2, x.mean = x.mean,
x.shape = 1, c.shape = 2)
assess.dat(n = n, q = q, B = B, s2 = s2, x.mean = x.mean,
x.shape = 2, c.shape = 1)
assess.dat(n = n, q = q, B = B, s2 = s2, x.mean = x.mean,
x.shape = 2, c.shape = 2)
n.rep <- 1000
assess.eta.est(n.rep = n.rep, n = n, q = q, B = B, s2 = s2, x.mean = x.mean,
x.shape = 1, c.shape = 1)
n.rep <- 100
assess.eta.est(n.rep = n.rep, n = n, q = q, B = B, s2 = s2, x.mean = x.mean,
x.shape = 1, c.shape = 1)
assess.eta.est(n.rep = n.rep, n = n, q = q, B = B, s2 = s2, x.mean = x.mean,
x.shape = 2, c.shape = 1)
assess.eta.est(n.rep = n.rep, n = n, q = q, B = B, s2 = s2, x.mean = x.mean,
x.shape = 1, c.shape = 2)
assess.eta.est(n.rep = n.rep, n = n, q = q, B = B, s2 = s2, x.mean = x.mean,
x.shape = 2, c.shape = 2)
assess.eta.est(n.rep = n.rep, n = n, q = q, B = B, s2 = s2, x.mean = x.mean,
x.shape = 1, c.shape = 1)
assess.eta.est(n.rep = n.rep, n = n, q = q, B = B, s2 = s2, x.mean = x.mean,
x.shape = 2, c.shape = 1)
assess.eta.est(n.rep = n.rep, n = n, q = q, B = B, s2 = s2, x.mean = x.mean,
x.shape = 1, c.shape = 2)
assess.eta.est(n.rep = n.rep, n = n, q = q, B = B, s2 = s2, x.mean = x.mean,
x.shape = 2, c.shape = 2)
