group_by(q, Param, method, nuis.x, nuis.c) %>%
summarise(v1_Bias = 10*mean(B - B.true, na.rm = T),
v2_ESE = 10*sd(B, na.rm = T),
v3_ASE = 10*mean(V, na.rm = T),
v4_Cov = 100*mean(ci.cov, na.rm = T)) %>%
gather(key, value, v1_Bias:v4_Cov) %>%
unite(Group, q, key) %>%
spread(Group, value)
kbl1 <- setNames(tbl1, c("Param", "Method", "X|Z", "C|Z",
sub(".+_", "", tail(names(tbl1), -4)))) %>%
kable(digits = c(0, 0, 0, 0,
2, 2, 2, 1,
2, 2, 2, 1),
format = format,
align = "ccccrrrrrrrr",
booktabs = T) %>%
kable_styling("striped") %>%
row_spec(row = 0, bold = TRUE) %>%
add_header_above(c(" " = 4,
"q = 0.4" = 4,
"q = 0.8" = 4))
return(kbl1)
}
make.table.allparam(n. = 800)
make.table.allparam(n. = 8000)
t3 <- make.table.allparam(n. = 8000, format = "latex")
# table with beta_1 and median SE
tbl4 <- sim.out.long %>%
filter(param == 2,
n == 8000) %>%
group_by(q, method, nuis.x, nuis.c) %>%
summarise(v1_Bias = 10*mean(B - B.true, na.rm = T),
v2_ESE = 10*sd(B, na.rm = T),
v3_ASE = 10*mean(V, na.rm = T),
v4_MedSE = 10*median(V, na.rm = T),
v5_Cov = 100*mean(ci.cov, na.rm = T)) %>%
gather(key, value, v1_Bias:v5_Cov) %>%
unite(Group, q, key) %>%
spread(Group, value)
setNames(tbl4, c("Method", "X|Z", "C|Z",
sub(".+_", "", tail(names(tbl4), -3)))) %>%
kable(digits = c(0, 0, 0,
2, 2, 2, 2, 1,
2, 2, 2, 2, 1),
format = "html",
align = "lccrrrrrrrr",
booktabs = T) %>%
kable_styling("striped") %>%
row_spec(row = 0, bold = TRUE) %>%
add_header_above(c(" " = 3,
"q = 0.4" = 5,
"q = 0.8" = 5))
pal_light <- c('#EE6677', '#228833', '#4477AA', '#CCBB44',
'#66CCEE','#AA3377', '#BBBBBB')
font.size <- 12
sim.out.long %>%
filter(param == 2) %>%
mutate(n = factor(n)) %>%
ggplot(aes(y = B,
x = n,
fill = method)) +
geom_boxplot() +
geom_hline(aes(yintercept = B.true),
linetype = "dashed",
linewidth = 0.75) +
facet_nested(q ~ method + nuis.x + nuis.c,
scales = "free") +
theme_bw() +
theme(#axis.ticks.x = element_blank(),
#axis.text.x = element_blank(),
axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
axis.title.y = element_text(size = font.size),
strip.text.x = element_text(size = font.size)) +
labs(y = "Estimated Coefficient") +
guides(fill = "none", color = "none") +
scale_fill_manual(values = pal_light[c(1, 2, 3, 5)])
rm(list = ls())
library(dplyr)
library(tidyverse)
library(ggplot2)
library(stringr)
library(ggh4x)
library(scales)
library(ggthemes)
library(kableExtra)
# true beta
B.true <- c(1, 10, 2, log(1))
# load simulation results from each of 10 clusters
sim.out.list <- lapply(
X = 0:9,
FUN = function(clust) {
cbind(clust,
read.csv(paste0(
"sim1_data/sd",
clust, ".csv")))
})
# combine simulation results into 1 data frame
sim.out <- bind_rows(sim.out.list)
colnames(sim.out) <- gsub(".B", ".", colnames(sim.out))
colnames(sim.out) <- gsub("B2", "trueB2", colnames(sim.out))
# make long data frame
sim.out.long <- sim.out %>%
pivot_longer(cols = starts_with(c("B", "V")),
names_to = "method.param",
values_to = "estimate") %>%
mutate(name = factor(str_sub(method.param, 1, 1)),
method = factor(str_sub(method.param, 3, 4),
levels = c("sp", "ml", "cc", "or"),
labels = c("Semipar", "MLE", "CC", "Oracle")),
nuis.x = factor(str_sub(str_sub(
gsub("[.]", "", method.param), 4, -2), 1, 1),
levels = c("", "1", "0",  "2"),
labels = c("-", "T", "F", "Nonpar")),
nuis.c = factor(str_sub(str_sub(
gsub("[.]", "", method.param), 4, -2), 2, 2),
levels = c("", "1", "0",  "2"),
labels = c("-", "T", "F", "Nonpar")),
param = factor(str_sub(method.param, -1, -1)),
B.true = B.true[param],
B = ifelse(abs(B - B.tru)) > 10, NA, B) %>%
dplyr::select(-c(method.param)) %>%
group_by(clust, n, q, name, method, nuis.x, nuis.c, param) %>%
mutate(id = row_number()) %>%
pivot_wider(names_from = name,
values_from = estimate,
id_cols = c(clust, n, q, method, nuis.x, nuis.c,
param, B.true, id)) %>%
mutate(ci.lower = B - qnorm(0.975) * V,
ci.upper = B + qnorm(0.975) * V,
ci.cov = B.true >= ci.lower & B.true <= ci.upper)
pal_light <- c('#EE6677', '#228833', '#4477AA', '#CCBB44',
'#66CCEE','#AA3377', '#BBBBBB')
font.size <- 12
sim.out.long %>%
filter(param == 2) %>%
mutate(n = factor(n)) %>%
ggplot(aes(y = B,
x = n,
fill = method)) +
geom_boxplot() +
geom_hline(aes(yintercept = B.true),
linetype = "dashed",
linewidth = 0.75) +
facet_nested(q ~ method + nuis.x + nuis.c,
scales = "free") +
theme_bw() +
theme(#axis.ticks.x = element_blank(),
#axis.text.x = element_blank(),
axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
axis.title.y = element_text(size = font.size),
strip.text.x = element_text(size = font.size)) +
labs(y = "Estimated Coefficient") +
guides(fill = "none", color = "none") +
scale_fill_manual(values = pal_light[c(1, 2, 3, 5)])
rm(list = ls())
library(dplyr)
library(tidyverse)
library(ggplot2)
library(stringr)
library(ggh4x)
library(scales)
library(ggthemes)
library(kableExtra)
# true beta
B.true <- c(1, 10, 2, log(1))
# load simulation results from each of 10 clusters
sim.out.list <- lapply(
X = 0:9,
FUN = function(clust) {
cbind(clust,
read.csv(paste0(
"sim1_data/sd",
clust, ".csv")))
})
# combine simulation results into 1 data frame
sim.out <- bind_rows(sim.out.list)
colnames(sim.out) <- gsub(".B", ".", colnames(sim.out))
colnames(sim.out) <- gsub("B2", "trueB2", colnames(sim.out))
# make long data frame
sim.out.long <- sim.out %>%
pivot_longer(cols = starts_with(c("B", "V")),
names_to = "method.param",
values_to = "estimate") %>%
mutate(name = factor(str_sub(method.param, 1, 1)),
method = factor(str_sub(method.param, 3, 4),
levels = c("sp", "ml", "cc", "or"),
labels = c("Semipar", "MLE", "CC", "Oracle")),
nuis.x = factor(str_sub(str_sub(
gsub("[.]", "", method.param), 4, -2), 1, 1),
levels = c("", "1", "0",  "2"),
labels = c("-", "T", "F", "Nonpar")),
nuis.c = factor(str_sub(str_sub(
gsub("[.]", "", method.param), 4, -2), 2, 2),
levels = c("", "1", "0",  "2"),
labels = c("-", "T", "F", "Nonpar")),
param = factor(str_sub(method.param, -1, -1)),
B.true = B.true[param],
B = ifelse(abs(B - B.tru)) > 10, NA, B) %>%
dplyr::select(-c(method.param)) %>%
group_by(clust, n, q, name, method, nuis.x, nuis.c, param) %>%
mutate(id = row_number()) %>%
pivot_wider(names_from = name,
values_from = estimate,
id_cols = c(clust, n, q, method, nuis.x, nuis.c,
param, B.true, id)) %>%
mutate(ci.lower = B - qnorm(0.975) * V,
ci.upper = B + qnorm(0.975) * V,
ci.cov = B.true >= ci.lower & B.true <= ci.upper)
# make long data frame
sim.out.long <- sim.out %>%
pivot_longer(cols = starts_with(c("B", "V")),
names_to = "method.param",
values_to = "estimate") %>%
mutate(name = factor(str_sub(method.param, 1, 1)),
method = factor(str_sub(method.param, 3, 4),
levels = c("sp", "ml", "cc", "or"),
labels = c("Semipar", "MLE", "CC", "Oracle")),
nuis.x = factor(str_sub(str_sub(
gsub("[.]", "", method.param), 4, -2), 1, 1),
levels = c("", "1", "0",  "2"),
labels = c("-", "T", "F", "Nonpar")),
nuis.c = factor(str_sub(str_sub(
gsub("[.]", "", method.param), 4, -2), 2, 2),
levels = c("", "1", "0",  "2"),
labels = c("-", "T", "F", "Nonpar")),
param = factor(str_sub(method.param, -1, -1)),
B.true = B.true[param],
B = ifelse(abs(B - B.true)) > 10, NA, B) %>%
dplyr::select(-c(method.param)) %>%
group_by(clust, n, q, name, method, nuis.x, nuis.c, param) %>%
mutate(id = row_number()) %>%
pivot_wider(names_from = name,
values_from = estimate,
id_cols = c(clust, n, q, method, nuis.x, nuis.c,
param, B.true, id)) %>%
mutate(ci.lower = B - qnorm(0.975) * V,
ci.upper = B + qnorm(0.975) * V,
ci.cov = B.true >= ci.lower & B.true <= ci.upper)
View(sim.out.list)
View(sim.out)
sim.out.long <- sim.out %>%
pivot_longer(cols = starts_with(c("B", "V")),
names_to = "method.param",
values_to = "estimate")
View(sim.out.long)
# make long data frame
sim.out.long <- sim.out %>%
pivot_longer(cols = starts_with(c("B", "V")),
names_to = "method.param",
values_to = "estimate") %>%
mutate(name = factor(str_sub(method.param, 1, 1)),
method = factor(str_sub(method.param, 3, 4),
levels = c("sp", "ml", "cc", "or"),
labels = c("Semipar", "MLE", "CC", "Oracle")),
nuis.x = factor(str_sub(str_sub(
gsub("[.]", "", method.param), 4, -2), 1, 1),
levels = c("", "1", "0",  "2"),
labels = c("-", "T", "F", "Nonpar")),
nuis.c = factor(str_sub(str_sub(
gsub("[.]", "", method.param), 4, -2), 2, 2),
levels = c("", "1", "0",  "2"),
labels = c("-", "T", "F", "Nonpar")),
param = factor(str_sub(method.param, -1, -1)),
B.true = B.true[param]) %>%
dplyr::select(-c(method.param)) %>%
group_by(clust, n, q, name, method, nuis.x, nuis.c, param) %>%
mutate(id = row_number()) %>%
pivot_wider(names_from = name,
values_from = estimate,
id_cols = c(clust, n, q, method, nuis.x, nuis.c,
param, B.true, id)) %>%
mutate(B = ifelse(abs(B - B.true) > 10, NA, B),
ci.lower = B - qnorm(0.975) * V,
ci.upper = B + qnorm(0.975) * V,
ci.cov = B.true >= ci.lower & B.true <= ci.upper)
rm(list = ls())
library(dplyr)
library(tidyverse)
library(ggplot2)
library(stringr)
library(ggh4x)
library(scales)
library(ggthemes)
library(kableExtra)
# true beta
B.true <- c(1, 10, 2, log(1))
# load simulation results from each of 10 clusters
sim.out.list <- lapply(
X = 0:9,
FUN = function(clust) {
cbind(clust,
read.csv(paste0(
"sim1_data/sd",
clust, ".csv")))
})
# combine simulation results into 1 data frame
sim.out <- bind_rows(sim.out.list)
colnames(sim.out) <- gsub(".B", ".", colnames(sim.out))
colnames(sim.out) <- gsub("B2", "trueB2", colnames(sim.out))
# make long data frame
sim.out.long <- sim.out %>%
pivot_longer(cols = starts_with(c("B", "V")),
names_to = "method.param",
values_to = "estimate") %>%
mutate(name = factor(str_sub(method.param, 1, 1)),
method = factor(str_sub(method.param, 3, 4),
levels = c("sp", "ml", "cc", "or"),
labels = c("Semipar", "MLE", "CC", "Oracle")),
nuis.x = factor(str_sub(str_sub(
gsub("[.]", "", method.param), 4, -2), 1, 1),
levels = c("", "1", "0",  "2"),
labels = c("-", "T", "F", "Nonpar")),
nuis.c = factor(str_sub(str_sub(
gsub("[.]", "", method.param), 4, -2), 2, 2),
levels = c("", "1", "0",  "2"),
labels = c("-", "T", "F", "Nonpar")),
param = factor(str_sub(method.param, -1, -1)),
B.true = B.true[param]) %>%
dplyr::select(-c(method.param)) %>%
group_by(clust, n, q, name, method, nuis.x, nuis.c, param) %>%
mutate(id = row_number()) %>%
pivot_wider(names_from = name,
values_from = estimate,
id_cols = c(clust, n, q, method, nuis.x, nuis.c,
param, B.true, id)) %>%
mutate(B = ifelse(abs(B - B.true) > 10, NA, B),
ci.lower = B - qnorm(0.975) * V,
ci.upper = B + qnorm(0.975) * V,
ci.cov = B.true >= ci.lower & B.true <= ci.upper)
# check for simulations with errors
sim.out.long %>%
filter(param == 1) %>%
group_by(q, n, method, nuis.x, nuis.c) %>%
summarize(n.error = sum(is.na(B)),
prop.error = mean(is.na(B))) %>%
filter(prop.error > 0) %>%
kable(digits = 3) %>%
kable_styling("striped")
# table with simulation results
make.table <- function(param., n., format = "html") {
tbl1 <- sim.out.long %>%
filter(param == param.,
n == n.) %>%
group_by(q, method, nuis.x, nuis.c) %>%
summarise(v1_Bias = 10*mean(B - B.true, na.rm = T),
v2_ESE = 10*sd(B, na.rm = T),
v3_ASE = 10*mean(V, na.rm = T),
v4_Cov = 100*mean(ci.cov, na.rm = T)) %>%
gather(key, value, v1_Bias:v4_Cov) %>%
unite(Group, q, key) %>%
spread(Group, value)
kbl1 <- setNames(tbl1, c("Method", "X|Z", "C|Z",
sub(".+_", "", tail(names(tbl1), -3)))) %>%
kable(digits = c(0, 0, 0,
2, 2, 2, 1,
2, 2, 2, 1),
format = format,
align = "lccrrrrrrrr",
booktabs = T) %>%
kable_styling("striped") %>%
row_spec(row = 0, bold = TRUE)
add_header_above(c(" " = 3,
"q = 0.4" = 4,
"q = 0.8" = 4))
return(kbl1)
}
make.table(param. = 1, n. = 800)
make.table(param. = 2, n. = 800)
make.table(param. = 3, n. = 800)
make.table(param. = 4, n. = 800)
make.table(param. = 1, n. = 8000)
make.table(param. = 2, n. = 8000)
make.table(param. = 3, n. = 8000)
make.table(param. = 4, n. = 8000)
t2 <- make.table(param. = 2, n. = 8000, format = "latex")
# table with all parameters
make.table.allparam <- function(n., format = "html") {
tbl1 <- sim.out.long %>%
filter(n == n.) %>%
mutate(Param = ifelse(param == 1, "$\\beta_1$",
ifelse(param == 2, "$\\beta_2$",
ifelse(param == 3, "$\\beta_3$",
"$\\log\\sigma^2$")))) %>%
group_by(q, Param, method, nuis.x, nuis.c) %>%
summarise(v1_Bias = 10*mean(B - B.true, na.rm = T),
v2_ESE = 10*sd(B, na.rm = T),
v3_ASE = 10*mean(V, na.rm = T),
v4_Cov = 100*mean(ci.cov, na.rm = T)) %>%
gather(key, value, v1_Bias:v4_Cov) %>%
unite(Group, q, key) %>%
spread(Group, value)
kbl1 <- setNames(tbl1, c("Param", "Method", "X|Z", "C|Z",
sub(".+_", "", tail(names(tbl1), -4)))) %>%
kable(digits = c(0, 0, 0, 0,
2, 2, 2, 1,
2, 2, 2, 1),
format = format,
align = "ccccrrrrrrrr",
booktabs = T) %>%
kable_styling("striped") %>%
row_spec(row = 0, bold = TRUE) %>%
add_header_above(c(" " = 4,
"q = 0.4" = 4,
"q = 0.8" = 4))
return(kbl1)
}
make.table.allparam(n. = 800)
make.table.allparam(n. = 8000)
t3 <- make.table.allparam(n. = 8000, format = "latex")
# table with beta_1 and median SE
tbl4 <- sim.out.long %>%
filter(param == 2,
n == 8000) %>%
group_by(q, method, nuis.x, nuis.c) %>%
summarise(v1_Bias = 10*mean(B - B.true, na.rm = T),
v2_ESE = 10*sd(B, na.rm = T),
v3_ASE = 10*mean(V, na.rm = T),
v4_MedSE = 10*median(V, na.rm = T),
v5_Cov = 100*mean(ci.cov, na.rm = T)) %>%
gather(key, value, v1_Bias:v5_Cov) %>%
unite(Group, q, key) %>%
spread(Group, value)
setNames(tbl4, c("Method", "X|Z", "C|Z",
sub(".+_", "", tail(names(tbl4), -3)))) %>%
kable(digits = c(0, 0, 0,
2, 2, 2, 2, 1,
2, 2, 2, 2, 1),
format = "html",
align = "lccrrrrrrrr",
booktabs = T) %>%
kable_styling("striped") %>%
row_spec(row = 0, bold = TRUE) %>%
add_header_above(c(" " = 3,
"q = 0.4" = 5,
"q = 0.8" = 5))
pal_light <- c('#EE6677', '#228833', '#4477AA', '#CCBB44',
'#66CCEE','#AA3377', '#BBBBBB')
font.size <- 12
sim.out.long %>%
filter(param == 2) %>%
mutate(n = factor(n)) %>%
ggplot(aes(y = B,
x = n,
fill = method)) +
geom_boxplot() +
geom_hline(aes(yintercept = B.true),
linetype = "dashed",
linewidth = 0.75) +
facet_nested(q ~ method + nuis.x + nuis.c,
scales = "free") +
theme_bw() +
theme(#axis.ticks.x = element_blank(),
#axis.text.x = element_blank(),
axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
axis.title.y = element_text(size = font.size),
strip.text.x = element_text(size = font.size)) +
labs(y = "Estimated Coefficient") +
guides(fill = "none", color = "none") +
scale_fill_manual(values = pal_light[c(1, 2, 3, 5)])
sim.out.time <- sim.out %>%
select(n, q, starts_with("time")) %>%
pivot_longer(starts_with("time"),
names_to = "proc",
values_to = "time") %>%
mutate(proc = gsub("time.", "", proc)) %>%
separate(proc, into = c("proc1", "proc2"), sep = "[.]")
# plot times for nuisance model fitting
sim.out.time %>%
filter(proc1 %in% c("cz", "xz")) %>%
mutate(n = factor(n),
q = factor(q)) %>%
ggplot(aes(x = n,
y = time)) +
geom_boxplot(aes(fill = q)) +
facet_grid(proc1 ~ proc2,
scales = "free")
# plot times for outcome model fitting
sim.out.time %>%
filter(proc1 %in% c("est", "var")) %>%
mutate(n = factor(n),
q = factor(q)) %>%
ggplot(aes(x = n,
y = time)) +
geom_boxplot(aes(fill = q)) +
facet_grid(proc1 ~ proc2,
scales = "free")
tbl5 <- sim.out.time %>%
filter(proc1 %in% c("est", "var")) %>%
group_by(n, q, proc1, proc2) %>%
summarise(mean = mean(time),
sd = sd(time)) %>%
mutate(time = paste0(round(mean, 1), " (", round(sd, 2), ")")) %>%
select(n, q, proc1, proc2, time) %>%
gather(key, value, time) %>%
unite(Group, n, q, key) %>%
spread(Group, value)
tbl5
tbl5 <- sim.out.time %>%
filter(proc1 %in% c("est", "var"),
!is.na(time)) %>%
group_by(n, q, proc1, proc2) %>%
summarise(mean = mean(time),
sd = sd(time)) %>%
mutate(time = paste0(round(mean, 1), " (", round(sd, 2), ")")) %>%
select(n, q, proc1, proc2, time) %>%
gather(key, value, time) %>%
unite(Group, n, q, key) %>%
spread(Group, value)
tbl5
